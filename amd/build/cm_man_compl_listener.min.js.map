{"version":3,"file":"cm_man_compl_listener.min.js","sources":["../src/cm_man_compl_listener.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme LearnR - JS code listener\n *\n * @module     local_dynprogressbar/cm_man_compl_listener\n * @copyright  2023 Tina John <tina.john@th-luebeck.de>\n * @copyright  Institut fuer interaktive Systeme der TH LÃ¼beck\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nlet registered = false;\n\n/**\n * Function to intialise and register event listeners for this module.\n */\nexport const init = () => {\n    if (registered) {\n        return;\n    }\n    registered = true;\n\n\n  /**\n   * Initialising.\n   */\n\n    // https://riptutorial.com/javascript/example/20197/listening-to-ajax-events-at-a-global-level\n    // Store a reference to the native method\n    let send = XMLHttpRequest.prototype.send;\n\n    // Overwrite the native method\n    XMLHttpRequest.prototype.send = function() {\n        //get Request Payload from send arguments\n        console.log(\"dynprogressbar---XMLHttpRequest send-----\");\n        var payload = arguments[0];\n        if(payload === null) {\n            send.apply(this, arguments);\n        } else {\n            console.log(\"dynprogressbar---the payload send-----\" + payload);\n            var isValidJSON = true;\n            try {\n                JSON.parse(payload);\n            } catch {\n                isValidJSON = false;\n            }\n            if(isValidJSON) {\n                // Assign an event listener\n                // and remove it again - to prevent double execution\n                // https://www.mediaevent.de/javascript/remove-event-listener.html\n                this.addEventListener(\"load\", function removeMe () {\n                    readAJAXrequestsend(payload);\n                    this.removeEventListener(\"load\", removeMe);\n                }, false);\n            }\n            // Call the stored reference to the native method\n            send.apply(this, arguments);\n        }\n    };\n\n    /**\n     * Reads payload and calls function addProgress (h5p activities need an outside call)\n     * or reduces progress bar.\n     * @param {payload} payload from request.\n     */\n    function readAJAXrequestsend (payload) {\n\n            const plo = JSON.parse(payload);\n            /*\n            console.log(plo[0].methodname);\n            console.log(plo[0].args.cmid);\n            console.log(plo[0].args.completed);\n            */\n            //--> update_activity_completion_status_manually in completion/external.php\n            if (plo[0].methodname.match(\"(.*)core_completion_update_activity_completion_status_manually(.*)\")) {\n              console.log(\"got XHR Data for core_completion_update_activity_completion_status_manually\", plo[0].methodname);\n              // Create a custom event\n               var cmcompletedEvent = new CustomEvent('cmcompleted',\n                 { detail: { message: 'core_completion_update_activity_completion_status_manually' } });\n               // Trigger the custom event\n               document.dispatchEvent(cmcompletedEvent);\n            }\n            payload = '';\n    }\n};\n"],"names":["registered","send","XMLHttpRequest","prototype","readAJAXrequestsend","payload","plo","JSON","parse","methodname","match","console","log","cmcompletedEvent","CustomEvent","detail","message","document","dispatchEvent","arguments","apply","this","isValidJSON","addEventListener","removeMe","removeEventListener"],"mappings":";;;;;;;;;IAwBIA,YAAa,gBAKG,QACZA,kBAGJA,YAAa,MASTC,KAAOC,eAAeC,UAAUF,cAoC3BG,oBAAqBC,eAEhBC,IAAMC,KAAKC,MAAMH,YAOnBC,IAAI,GAAGG,WAAWC,MAAM,sEAAuE,CACjGC,QAAQC,IAAI,8EAA+EN,IAAI,GAAGG,gBAE7FI,iBAAmB,IAAIC,YAAY,cACrC,CAAEC,OAAQ,CAAEC,QAAS,gEAEvBC,SAASC,cAAcL,kBAE1BR,QAAU,GAlDlBH,eAAeC,UAAUF,KAAO,WAE5BU,QAAQC,IAAI,iDACRP,QAAUc,UAAU,MACT,OAAZd,QACCJ,KAAKmB,MAAMC,KAAMF,eACd,CACHR,QAAQC,IAAI,yCAA2CP,aACnDiB,aAAc,MAEdf,KAAKC,MAAMH,SACb,MACEiB,aAAc,EAEfA,kBAIMC,iBAAiB,QAAQ,SAASC,WACnCpB,oBAAoBC,cACfoB,oBAAoB,OAAQD,aAClC,GAGPvB,KAAKmB,MAAMC,KAAMF"}